VPC` I8 RYQCFQBqW[FTU_RDZ]ZZE_E	J:@WFGR_SZWG_E	8 N>Q@WWE]Q@YWWI*KWFG@\ TZDSTXAAnC^]D]AFF@GNRPDVnkJaoQiAa}lhl\n;I2Q@EUGZSLP]\ J;@WFGR_V]FZ^SAA|R__ [V^_VEUKFDJL\QSFW|hlmPGFT^_lijldni~mm2O*L
:9HX@S_UEED^]>VMWQF[]\ \TD[]PZ[V_WK9WSDA@c^^[ZW]Oja`fexwz	WJB[RTB`S@	vWQ g|eV[]YP\F_]FP_CQ[]BSFZ
CVQAB]	8 _QEGB{V]Y[WMFFA]YWUS]\^I_To@WGCQV\	EIAYAWGkXF uTS   t`]]_S[\E\_USZCZ]_	BAEY	C]ZG@W	HEE@\\XI	8 ^RDCJz]]Y[W\FmkS^]G[VTHC[FUKaSFtVQ

s}lV]_SI_D^]RQVJQ]_	 APD[JWQG@WYDGB[^T@	8 TRFU\SDUEE]D	8 Ce_ZA@TFOZT^W_VMW\Fjon_T	8 GE_BlVWJWQUPDRoe8MTEL`qa`tt~zu}NDF]	8 ESF\XFWNTFwS@U	8 UPDVGULm[_WVAETTW@dQTW  	
:NX@WJBICTCWJB[@EBTYMWF]umebDA[ZW	8 Cr_[V]Y[WhlmU	8 S\]Kq]WJERTRFUcoWXAXBVA	BSFH8\SDARr^_X[QUNQ]]	
;B~Wjoloemiln~jloi]leU_	8 V]SKt\WJERTRFUco|mkmnhkeG@^|mBond	8 PTZ\WE`EVtHCR^YU_	
;TYMSQF_UKWW\XFS	8 F@]SFSi}CUC^US]gb~opuozvZ[V	8 AzQAWF`E@DU@F|UY]W@njoneAi~lh^	8 TyUBp\WJWQUPDR:VSFA]SBHVAFG@bVTQB]KNMFHhkWCGWATTUd[@XDa~zFFPcTAFWGD_WF O\zWio O\zWi o8@WFG@NUQGS:E38 BACP]@D_KM^_S8FD_SG[[^TWFZ]VRYW]OI8 \G]O@WB^SCTG_[VYWAQ]__WWDWK_S\USR^]:VSFA]SB_\F_E 8@f] S@@RLVYW\C^_DV\@ilo	V]9OF]Re^VJQS]SFSil
:U\F\D@_NGD\Ejqa`fexwzLDF];FeJ^|Bkicgo{omMnkfOoG\
:Jl@WJWCUQGS2DSRUQGWWWEvSTT8VSFWSTEdZ_Q\XFWUWTeX]V 	8 GQAQHHP@WA 
VJDYJ\A UPDV@_tfaF@[NV8@q] R_\Y]UillU:Q]] Bp]U@\QVSFAjn]AB[@WA DQLQ	8 ]SBKKq]]Y[E\GW_W	8 GPBGF@g@WXTRWS@Qbo	8 DwFUVSFS|B
oAlCbnAnaomMUY2VSTPFpDYWJWQDPEQ	>@aVkicgo{m	nGcoi~mOiU_	8 CW	JjVWJWCUQGS2DSRAD8IW@Voe[\VWJoWTW@qLM@[PGFEI8 B@AVio OZ[V	8 C\@aVTIUPPQLX	8 ]VAVI*[T BTh iQWVWJ}TVUGs@DJPPGFW	C3 BF AELAVilHQ[V	*OE]BUI> HMBF OJVioLK]i o	8 O8 M2OE]BUI>PEAPk	dN@VoeN;AVRbUVJQS]SFS	*IFBT@VoeN SZV:O8 TRFU\SDBOBEF@kWTW@WRMYGNjrT@EVA@U\e[FZNx|}xGFDb]HGWAF ]VFHM	8 CUGGF^]SFS@EA]QPWW]F[Q[AFQ\EW@	
;M98REVZF[]\PPCCV{YWjXEVSFABZVK2]{MV2P[MVkfeoF_OWP^@nSWTnGB^OPUCo@[Vjolo3@i\VZUO`WUwJPSY^U^	8 T\O: X@}]_WJWQDPEQ	>IWZK2 [yU^]{MVB]@][i}
;O8 LDZ]\][	8 AW@EJW]{_U;L:9TA^[M[]\BACBUz_SqJKSKVSTPA[PC3]i\2@{B^QDcgno|BlhonddoU;]rT@{PTIUPPQLXio	*[vQZFFPB[YW	F_]TSNBS\_EHU]SVAA[P8 Bz_il}U:V][;[@i\UKWWQ{^	8 Y^[I*]{M\{YB[BWXrRQbo	8 M2OWYX\VY8RTEEA\_qT	8 ;L:9TA^[M[]\QIRGYGI8 AX@V	E	8 GQAPQLX;WY\QESDSCG@SO^SAF{NUTH|T	
;]O_ERTA\RQQeU8_EMFBVBXQ[\iswmTnIM^	
;FYK[V 9OS@Q9]]I8 DJ@I8 VSFS\UGZ[T	Q[VMF9OCPES[UJK]@I*D8 P2OWYX\V\XFS_E_^LDVSFSLT_WGZR3Q  8[TVAEP	VL^^NN UPDRXUV^FZI>D^K9 EBJO: ]SFS \TD[]PZ[V_W
: LSRFWXW@@]@	J: L;C9OWYX\V\XFS_E_^LDVSFSLT_WGZR3O*@}TnDITFUAncgoG\
:Q]@{DTHVQTYMSio;GB[\SDVTD\DLIAFM^WQ]ASWTD[WEECY\QABRQWW`WTW@ECMSO	8 X\QTWG8 EBJI>I\PWVAIS@AW{MVcQDGB[[V8 NQUD[QW@@OCK9D8IWY^SSUK^W\UFH O: X\QTWGBS@AWi\VqA@UIJ@Q[D;M2]{MV\DLIAFM^WQ]ASWTD[WEECY\QABRQWWBS@AWi\VbRECJZ[V;FULL@\]{MV
:N