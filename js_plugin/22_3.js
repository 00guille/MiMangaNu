VPC` I8 RYQCFQBqW[FTU_RDZ]ZZE_E	J:@WFGR_SZWG_E	8 N>Q@WWE]Q@YWWI*KWFG@\ TZDSTXAAnC^]D]AFF@GNRPDVnkJaoQiAa}lhl\n;I2Q@EUGZSLP]\ J;@WFGR_V]FZ^SAA|R__ [V^_VEUKFDJL\QSFW|hlmPGFT^_lijldni~mm2O*L
:9HX@S_UEED^]>VMWQF[]\ \TD[]PZ[V_WK9WSDA@c^^[ZW]Oja`fexwz	WJB[RTB`S@	vWQ g|eV[]YP\F_]FP_CQ[]BSFZ
CVQAB]	8 _QEGB{V]Y[WMFFA]YWUS]\^I_To@WGCQV\	EIAYAWGkXF uTS   t`]]_S[\E\_USZCZ]_	BAEY	C]ZG@W	HEE@\\XI	8 ^RDCJz]]Y[W\FmkS^]G[VTHC[FUKaSFtVQ

s}lV]_SI_D^]RQVJQ]_	 APD[JWQG@WYDGB[^T@	8 TRFU\SDUEE]D	8 Ce_ZA@TFOZT^W_VMW\Fjon_T	8 GE_BlVWJWQUPDRoe8MTEL`qa`tt~zu}NDF]	8 ESF\XFWNTFwS@U	8 UPDVGULm[_WVAETTW@dQTW  	
:NX@WJBICTCWJB[@EBTYMWF]umebDA[ZW	8 Cr_[V]Y[WhlmU	8 S\]Kq]WJERTRFUcoWXAXBVA	BSFH8\SDARr^_X[QUNQ]]	
;B~Wjoloemiln~jloi]leU_	8 V]SKt\WJERTRFUco|mkmnhkeG@^|mBond	8 PTZ\WE`EVtHCR^YU_	
;TYMSQF_UKWW\XFS	8 F@]SFSi}CUC^US]gb~opuozvZ[V	8 AzQAWF`E@DU@F|UY]W@njoneAi~lh^	8 TyUBp\WJWQUPDR:VSFA]SBHVAFG@bVTQB]KNMFHhkWCGWATTUd[@XDa~zFFPcTAFWGD_WF O\zWio O\zWi o8@WFG@NUQGS:E38 BACP]@D_KM^_S8FD_SG[[^TWFZ]VRYW]OI8 \G]O@WB^SCTG_[VYWAQ]__WWDWK_S\USR^]:VSFA]SB_\F_E 8@f] S@@RLVYW\C^_DV\@ilo	V]9OF]Re^VJQS]SFSil
:U\F\D@_NGD\Ejqa`fexwzLDF];FeJ^|Bkicgo{omMnkfOoG\
:Jl@WJWCUQGS2DSRUQGWWWEvSTT8VSFWSTEdZ_Q\XFWUWTeX]V 	8 GQAQHHP@WA 
VJDYJ\A UPDV@_tfaF@[NV8@q] R_\Y]UillU:Q]] Bp]U@\QVSFAjn]AB[@WA DQLQ	8 ]SBKKq]]Y[E\GW_W	8 GPBGF@g@WXTRWS@Qbo	8 DwFUVSFS|B
oAlCbnAnaomMUY2VSTPFpDYWJWQDPEQ	>@aVkicgo{m	nGcoi~mOiU_	8 CW	JjVWJWCUQGS2DSRAD8IW@Voe[\VWJoWTW@qLM@[PGFEI8 B@AVio OZ[V	8 C\@aVTIUPPQLX	8 ]VAVI*[T BTh iQWVWJ}TVUGs@DJPPGFW	C3 BF AELAVilHQ[V	*OE]BUI> HMBF OJVioLK]i o	8 O8 M2OE]BUI>PEAPk	dN@VoeN;AVRbUVJQS]SFS	*IFBT@VoeN SZV:O8 TRFU\SDBOBEF@kWTW@WRMYGNjrT@EVA@U\e[FZNx|}xGFDb]HGWAF ]VFHM	8 CUGGF^]SFS@EA]QPWW]F[Q[AFQ\EW@	
;M98REVZF[]\PPCCV{YWjXEVSFAJ:Wp_U
:Jp_UkmiLT]TS\A|R_^nEHU]SVAi~lS]3VOJ:[ Cx]TQH]ZVSFS	
;[TIK9 ^y^UV{_U AX@VQbo	8 M2OWYX\VY8RTEEA\_qTU	8O8*WD^PF]_VBS@AWi\VqA@UI]SFSRXUH8]{_ 9K{P]TDhlhenAn{jnooiU	8 Xr_	JpPWJWCUQGSk	d	8 XsQPMFBAX\W@]W_S\AQO\EC^[Q\JRXU3@i\cgoV
:\VI8 ]@{_WXTRZpX3 YUYI8 V{_Ox\DYH\[pAZim3 M9DEZ[^EY	>@WFGR__z_:8O8*WD^PF]_VQ[QE\GO:B[BEN2DSRUQGS	8 RYW	[NAGPATCSDXQKM{\VWJoW	8 ]D	UN@WB^ARTn_;YG_E@EA]QPWbstnV}JMU	8 FR@Y\	*DUBZ	*V[C3 DAKK2 PQLX_WTY^TWY\_E	*DQSFQHUA@[BI8 O>C9DEZ[^EWS@Q\GL]LOPQLX^W\UTY Q8Q;]VVSFS]GX\ENVSFA]U]U@X J;V]I*F@YJ: VUDY_WFH^UQ]T_E	8 OQAERXQBJV@I8 O8 Q	*DEZ[^EWS@Q\GL]LOPQLX^W\UTY Q8O8 CxTdD[WEWRmhlmU_	8 ZVK{VWJERTRFUco	8 BBP	VXDUWFYDGBG
F_]TSNBS\_FQ\EW@ YWQSAQSDTfU^\@W@N SD:]{_GZ@DHJF_OWP^@W_UD[WEWR]TQSSRPTVIS@AW{MVpBASMKKQ[V	
;B]MG@\]i\V9O